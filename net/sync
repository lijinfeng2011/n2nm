#!/opt/mydan/perl/bin/perl
use strict;
use warnings;

use FindBin qw( $RealBin );
use YAML::XS;

my $c = eval{ YAML::XS::LoadFile "$RealBin/../conf.yml"; };
die "load conf fail: $@" if $@;

my $net = eval{ YAML::XS::LoadFile "$RealBin/../my.net"; };
die "load my.net fail: $@" if $@;

for my $k ( keys %$net )
{
    next if $k =~ /^\d+\.\d+\.\d+\.\d+$/;
    my $p = delete $net->{$k};
    my @x = `dig '$k'  +short | egrep ^'[1-9]'`;
    chomp @x;
    map{ $net->{$_} = $p }grep{ $_ =~ /^\d+\.\d+\.\d+\.\d+$/ }@x;
}

my %net;

for my $ip ( keys %$net )
{
    my $proxy = $net->{$ip};
    $proxy = $c->{edge}{$proxy} unless $proxy && $proxy =~ /^\d+\.\d+\.\d+\.\d+$/;
    die "no proxy" unless $proxy && $proxy =~ /^\d+\.\d+\.\d+\.\d+$/;
    $net{$ip} = $proxy;
}


my    @status = `$RealBin/status`;
die "get status fail: $!" if $?;
chomp @status;
my %status;

for( @status )
{
    next unless $_ =~ /^(.+):\s+(.+)$/;
    $status{$1} = $2;
}

for my $ip ( keys %net )
{
    my $proxy = $net{$ip};

    my $currproxy = $status{$ip};
    if( $currproxy )
    {
        if( $currproxy ne $proxy )
        {
            system "$RealBin/del $ip";
            system "$RealBin/add $ip $proxy";
        }
    }
    else
    {
        system "$RealBin/add $ip $proxy";
    }
}

for my $ip ( keys %status )
{
    next if $net{$ip};
    system "$RealBin/del $ip";
}
system "$RealBin/status";
